<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api\Data;

use Magento\Framework\ObjectManagerInterface;

/**
 * Autogenerated description for Category class
 *
 * @SuppressWarnings(PHPMD.CouplingBetweenObjects)
 * @SuppressWarnings(PHPMD.CyclomaticComplexity)
 * @SuppressWarnings(PHPMD.UnusedPrivateField)
 * @SuppressWarnings(PHPMD.NPathComplexity)
 * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
 */
final class CategoryArrayMapper
{
    /**
     * @var mixed
     */
    private $data;

    /**
     * @var ObjectManagerInterface
     */
    private $objectManager;

    public function __construct(ObjectManagerInterface $objectManager)
    {
        $this->objectManager = $objectManager;
    }

    /**
    * Convert the DTO to the array with the data
    *
    * @param Category $dto
    * @return array
    */
    public function convertToArray(Category $dto)
    {
        $result = [];
        $result["id"] = $dto->getId();
        $result["path"] = $dto->getPath();
        $result["position"] = $dto->getPosition();
        $result["level"] = $dto->getLevel();
        $result["children_count"] = $dto->getChildrenCount();
        $result["name"] = $dto->getName();
        $result["display_mode"] = $dto->getDisplayMode();
        $result["default_sort_by"] = $dto->getDefaultSortBy();
        $result["url_key"] = $dto->getUrlKey();
        $result["url_path"] = $dto->getUrlPath();
        $result["is_active"] = $dto->getIsActive();
        $result["is_anchor"] = $dto->getIsAnchor();
        $result["include_in_menu"] = $dto->getIncludeInMenu();
        $result["available_sort_by"] = $dto->getAvailableSortBy();
        /** Convert complex Array field **/
        $fieldArray = [];
        foreach ($dto->getBreadcrumbs() as $fieldArrayDto) {
            $fieldArray[] = $this->objectManager->get(\Magento\CatalogStorefrontApi\Api\Data\BreadcrumbArrayMapper::class)
                ->convertToArray($fieldArrayDto);
        }
        $result["breadcrumbs"] = $fieldArray;
        $result["description"] = $dto->getDescription();
        $result["canonical_url"] = $dto->getCanonicalUrl();
        $result["product_count"] = $dto->getProductCount();
        $result["children"] = $dto->getChildren();
        $result["image"] = $dto->getImage();
        $result["parent_id"] = $dto->getParentId();
        $result["meta_title"] = $dto->getMetaTitle();
        $result["meta_description"] = $dto->getMetaDescription();
        $result["meta_keywords"] = $dto->getMetaKeywords();
        /** Convert complex Array field **/
        $fieldArray = [];
        foreach ($dto->getAttributes() as $fieldArrayDto) {
            $fieldArray[] = $this->objectManager->get(\Magento\CatalogStorefrontApi\Api\Data\AttributeArrayMapper::class)
                ->convertToArray($fieldArrayDto);
        }
        $result["attributes"] = $fieldArray;
        return $result;
    }
}
