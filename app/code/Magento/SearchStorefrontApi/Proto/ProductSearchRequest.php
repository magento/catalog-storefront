<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: search.proto

namespace Magento\SearchStorefrontApi\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>magento.searchStorefrontApi.proto.ProductSearchRequest</code>
 */
class ProductSearchRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * search query to perform full-text search
     *
     * Generated from protobuf field <code>string phrase = 1;</code>
     */
    protected $phrase = '';
    /**
     *scope to check
     *
     * Generated from protobuf field <code>string store = 2;</code>
     */
    protected $store = '';
    /**
     * number of product ids to return in set
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     */
    protected $page_size = 0;
    /**
     * current page of result set to return
     *
     * Generated from protobuf field <code>int32 current_page = 4;</code>
     */
    protected $current_page = 0;
    /**
     * filters to filter result by specified attribute values
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Filter filters = 5;</code>
     */
    private $filters;
    /**
     * sort order of returned product by specified attribute in specified order
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Sort sort = 6;</code>
     */
    private $sort;
    /**
     *include aggregation into response
     *
     * Generated from protobuf field <code>bool include_aggregations = 7;</code>
     */
    protected $include_aggregations = false;
    /**
     *customer group id (for price bucket)
     *
     * Generated from protobuf field <code>int32 customer_group_id = 8;</code>
     */
    protected $customer_group_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $phrase
     *           search query to perform full-text search
     *     @type string $store
     *          scope to check
     *     @type int $page_size
     *           number of product ids to return in set
     *     @type int $current_page
     *           current page of result set to return
     *     @type \Magento\SearchStorefrontApi\Proto\Filter[]|\Google\Protobuf\Internal\RepeatedField $filters
     *           filters to filter result by specified attribute values
     *     @type \Magento\SearchStorefrontApi\Proto\Sort[]|\Google\Protobuf\Internal\RepeatedField $sort
     *           sort order of returned product by specified attribute in specified order
     *     @type bool $include_aggregations
     *          include aggregation into response
     *     @type int $customer_group_id
     *          customer group id (for price bucket)
     * }
     */
    public function __construct($data = null)
    {
        \Magento\SearchStorefrontApi\Metadata\Search::initOnce();
        parent::__construct($data);
    }

    /**
     * search query to perform full-text search
     *
     * Generated from protobuf field <code>string phrase = 1;</code>
     * @return string
     */
    public function getPhrase()
    {
        return $this->phrase;
    }

    /**
     * search query to perform full-text search
     *
     * Generated from protobuf field <code>string phrase = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPhrase($var)
    {
        GPBUtil::checkString($var, true);
        $this->phrase = $var;

        return $this;
    }

    /**
     *scope to check
     *
     * Generated from protobuf field <code>string store = 2;</code>
     * @return string
     */
    public function getStore()
    {
        return $this->store;
    }

    /**
     *scope to check
     *
     * Generated from protobuf field <code>string store = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setStore($var)
    {
        GPBUtil::checkString($var, true);
        $this->store = $var;

        return $this;
    }

    /**
     * number of product ids to return in set
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * number of product ids to return in set
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * current page of result set to return
     *
     * Generated from protobuf field <code>int32 current_page = 4;</code>
     * @return int
     */
    public function getCurrentPage()
    {
        return $this->current_page;
    }

    /**
     * current page of result set to return
     *
     * Generated from protobuf field <code>int32 current_page = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setCurrentPage($var)
    {
        GPBUtil::checkInt32($var);
        $this->current_page = $var;

        return $this;
    }

    /**
     * filters to filter result by specified attribute values
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Filter filters = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFilters()
    {
        return $this->filters;
    }

    /**
     * filters to filter result by specified attribute values
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Filter filters = 5;</code>
     * @param \Magento\SearchStorefrontApi\Proto\Filter[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFilters($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Magento\SearchStorefrontApi\Proto\Filter::class);
        $this->filters = $arr;

        return $this;
    }

    /**
     * sort order of returned product by specified attribute in specified order
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Sort sort = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSort()
    {
        return $this->sort;
    }

    /**
     * sort order of returned product by specified attribute in specified order
     *
     * Generated from protobuf field <code>repeated .magento.searchStorefrontApi.proto.Sort sort = 6;</code>
     * @param \Magento\SearchStorefrontApi\Proto\Sort[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSort($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Magento\SearchStorefrontApi\Proto\Sort::class);
        $this->sort = $arr;

        return $this;
    }

    /**
     *include aggregation into response
     *
     * Generated from protobuf field <code>bool include_aggregations = 7;</code>
     * @return bool
     */
    public function getIncludeAggregations()
    {
        return $this->include_aggregations;
    }

    /**
     *include aggregation into response
     *
     * Generated from protobuf field <code>bool include_aggregations = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeAggregations($var)
    {
        GPBUtil::checkBool($var);
        $this->include_aggregations = $var;

        return $this;
    }

    /**
     *customer group id (for price bucket)
     *
     * Generated from protobuf field <code>int32 customer_group_id = 8;</code>
     * @return int
     */
    public function getCustomerGroupId()
    {
        return $this->customer_group_id;
    }

    /**
     *customer group id (for price bucket)
     *
     * Generated from protobuf field <code>int32 customer_group_id = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setCustomerGroupId($var)
    {
        GPBUtil::checkInt32($var);
        $this->customer_group_id = $var;

        return $this;
    }
}
